---

services:
  tousinclus-frontend:
    image: ghcr.io/equanoria/tousinclus/tousinclus-frontend:staging
    networks:
      tousinclus-backend:
      traefik_traefik:
    deploy:
      placement:
        constraints:
          - node.hostname == vm01
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.equanoria-tousinclus-frontend_staging.entrypoints=websecure
        - traefik.http.routers.equanoria-tousinclus-frontend_staging.rule=Host(`staging.tousinclus.org`)
        - traefik.http.services.equanoria-tousinclus-frontend_staging.loadbalancer.server.port=3000
        - traefik.http.routers.equanoria-tousinclus-frontend_staging.tls=true
        - traefik.http.routers.equanoria-tousinclus-frontend_staging.tls.certresolver=letsencrypt
        - traefik.http.middlewares.equanoria-tousinclus-frontend_staging-auth.basicauth.users=${STAGING_USERS}
        - traefik.http.routers.equanoria-tousinclus-frontend_staging.middlewares=equanoria-tousinclus-frontend_staging-auth
    environment:
      - BACKEND_HOST=tousinclus-backend

  tousinclus-backend:
    image: ghcr.io/equanoria/tousinclus/tousinclus-backend:staging
    networks:
      tousinclus-backend:
    deploy:
      placement:
        constraints:
          - node.hostname == vm01
      replicas: 1
    environment:
      - REDIS_HOSTNAME=valkey-backend
      - REDIS_PORT=6379

  postgresql-backend:
    image: postgres:13.16
    networks:
      tousinclus-backend:
    deploy:
      placement:
        constraints:
          - node.hostname == vm01
      replicas: 1
    environment:
      - POSTGRES_USER=${BACKEND_DB_USER}
      - POSTGRES_DB=${BACKEND_DB_NAME}
      - POSTGRES_PASSWORD=${BACKEND_DB_PASSWORD}
    volumes:
      - postgresql-backend:/var/lib/postgresql/data

  valkey-backend:
    image: valkey/valkey:8.0.1
    networks:
      tousinclus-backend:
    deploy:
      placement:
        constraints:
          - node.hostname == vm01
      replicas: 1
    volumes:
      - valkey-directus:/data

  directus:
    build:
      context: ../
      dockerfile: ./tools/directus/Dockerfile
    pull_policy: build
    networks:
      directus:
      traefik_traefik:
    deploy:
      placement:
        constraints:
          - node.hostname == vm01
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.equanoria-tousinclus-directus_staging.entrypoints=websecure
        - traefik.http.routers.equanoria-tousinclus-directus_staging.rule=Host(`staging.directus.tousinclus.org`)
        - traefik.http.services.equanoria-tousinclus-directus_staging.loadbalancer.server.port=8055
        - traefik.http.routers.equanoria-tousinclus-directus_staging.tls=true
        - traefik.http.routers.equanoria-tousinclus-directus_staging.tls.certresolver=letsencrypt
        - traefik.http.middlewares.equanoria-tousinclus-directus_staging-auth.basicauth.users=${STAGING_USERS}
        - traefik.http.routers.equanoria-tousinclus-directus_staging.middlewares=equanoria-tousinclus-directus_staging-auth
    depends_on:
      - postgresql-directus
      - valkey-directus
    environment:
      - SECRET=${DIRECTUS_SECRET}
      - DB_USER=${DIRECTUS_DB_USER}
      - DB_DATABASE=${DIRECTUS_DB_NAME}
      - DB_PASSWORD=${DIRECTUS_DB_PASSWORD}
      - DB_CLIENT=pg
      - DB_HOST=postgresql-directus
      - DB_PORT=5432
      - CACHE_ENABLED=true
      - CACHE_AUTO_PURGE=true
      - CACHE_STORE=redis
      - PUBLIC_URL=${DIRECTUS_PUBLIC_URL}
      - REDIS=redis://valkey-directus:6379
      - ADMIN_EMAIL=${DIRECTUS_ADMIN_EMAIL}
      - ADMIN_PASSWORD=${DIRECTUS_ADMIN_PASSWORD}
      - ADMIN_TOKEN=${DIRECTUS_ADMIN_TOKEN}
      - EMAIL_TRANSPORT=smtp
      - EMAIL_FROM=${DIRECTUS_EMAIL_FROM}
      - EMAIL_SMTP_HOST=${DIRECTUS_EMAIL_SMTP_HOST}
      - EMAIL_SMTP_PORT=${DIRECTUS_EMAIL_SMTP_PORT}
      - EMAIL_SMTP_USER=${DIRECTUS_EMAIL_SMTP_USER}
      - EMAIL_SMTP_PASSWORD=${DIRECTUS_EMAIL_SMTP_PASSWORD}
      - SCHEMA_SYNC=IMPORT
    volumes:
      - directus-uploads:/directus/uploads

  valkey-directus:
    image: valkey/valkey:8.0.1
    networks:
      directus:
    deploy:
      placement:
        constraints:
          - node.hostname == vm01
      replicas: 1
    volumes:
      - valkey-directus:/data

  postgresql-directus:
    image: postgres:13.16
    networks:
      directus:
    deploy:
      placement:
        constraints:
          - node.hostname == vm01
      replicas: 1
    environment:
      - POSTGRES_USER=${DIRECTUS_DB_USER}
      - POSTGRES_DB=${DIRECTUS_DB_NAME}
      - POSTGRES_PASSWORD=${DIRECTUS_DB_PASSWORD}
    volumes:
      - postgresql-directus:/var/lib/postgresql/data

volumes:
  postgresql-backend:
  directus-uploads:
  valkey-directus:
  postgresql-directus:

networks:
  directus:
  tousinclus-backend:
  traefik_traefik:
    external: true
