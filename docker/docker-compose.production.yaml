---

services:
  tousinclus-frontend:
    image: ghcr.io/equanoria/tousinclus/tousinclus-frontend:latest
    networks:
      traefik_traefik:
    deploy:
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.tousinclus-frontend_production.entrypoints=websecure
        - traefik.http.routers.tousinclus-frontend_production.rule=Host(`tousinclus.org`)
        - traefik.http.services.tousinclus-frontend_production.loadbalancer.server.port=3000
        - traefik.http.routers.tousinclus-frontend_production.tls=true
        - traefik.http.routers.tousinclus-frontend_production.tls.certresolver=letsencrypt
    environment:
      - SOCKET_IO_URL=https://tousinclus.org/api
      - BACKEND_URL=https://tousinclus.org/api
      - DIRECTUS_URL=https://cms.tousinclus.org

  tousinclus-dashboard:
    image: ghcr.io/equanoria/tousinclus/tousinclus-dashboard:latest
    networks:
      traefik_traefik:
    deploy:
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.tousinclus-dashboard_production.entrypoints=websecure
        - traefik.http.routers.tousinclus-dashboard_production.rule=Host(`dashboard.tousinclus.org`)
        - traefik.http.services.tousinclus-dashboard_production.loadbalancer.server.port=3000
        - traefik.http.routers.tousinclus-dashboard_production.tls=true
        - traefik.http.routers.tousinclus-dashboard_production.tls.certresolver=letsencrypt
    environment:
      - BACKEND_URL=https://tousinclus.org/api
      - DIRECTUS_URL=https://cms.tousinclus.org

  tousinclus-backend:
    image: ghcr.io/equanoria/tousinclus/tousinclus-backend:latest
    networks:
      traefik_traefik:
      tousinclus-backend:
    deploy:
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.tousinclus-backend_production.entrypoints=websecure
        - traefik.http.routers.tousinclus-backend_production.rule=Host(`tousinclus.org`) && PathPrefix(`/api`)
        - traefik.http.services.tousinclus-backend_production.loadbalancer.server.port=3000
        - traefik.http.routers.tousinclus-backend_production.tls=true
        - traefik.http.routers.tousinclus-backend_production.tls.certresolver=letsencrypt
    environment:
      - TZ=${TZ}
      - REDIS_HOSTNAME=backend-valkey
      - REDIS_PORT=6379
      - MONGO_HOSTNAME=backend-mongo
      - MONGO_PORT=27017
      - MONGO_DATABASE=${BACKEND_DB_NAME}
      - MONGO_USERNAME=${BACKEND_DB_USER}
      - MONGO_PASSWORD=${BACKEND_DB_PASSWORD}

  backend-mongo:
    image: mongo:8.0.4-noble
    networks:
      tousinclus-backend:
    deploy:
      replicas: 1
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${BACKEND_DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${BACKEND_DB_PASSWORD}
    volumes:
      - backend-mongo:/data/db

  backend-valkey:
    image: valkey/valkey:8.0.1
    networks:
      tousinclus-backend:
    deploy:
      replicas: 1
    volumes:
      - backend-valkey:/data

  directus:
    image: ghcr.io/equanoria/tousinclus/directus:latest
    networks:
      directus:
      traefik_traefik:
    deploy:
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.routers.tousinclus-directus_production.entrypoints=websecure
        - traefik.http.routers.tousinclus-directus_production.rule=Host(`cms.tousinclus.org`)
        - traefik.http.services.tousinclus-directus_production.loadbalancer.server.port=8055
        - traefik.http.routers.tousinclus-directus_production.tls=true
        - traefik.http.routers.tousinclus-directus_production.tls.certresolver=letsencrypt
    depends_on:
      - directus-postgresql
      - directus-valkey
    environment:
      - TZ=${TZ}
      - SECRET=${DIRECTUS_SECRET}
      - DB_USER=${DIRECTUS_DB_USER}
      - DB_DATABASE=${DIRECTUS_DB_NAME}
      - DB_PASSWORD=${DIRECTUS_DB_PASSWORD}
      - DB_CLIENT=pg
      - DB_HOST=directus-postgresql
      - DB_PORT=5432
      - DB_POOL__MIN=0
      - DB_POOL__IDLE_TIMEOUT_MILLIS=3000
      - CACHE_ENABLED=true
      - CACHE_AUTO_PURGE=true
      - CACHE_STORE=redis
      - PUBLIC_URL=${DIRECTUS_PUBLIC_URL}
      - REDIS=redis://directus-valkey:6379
      - ADMIN_EMAIL=${DIRECTUS_ADMIN_EMAIL}
      - ADMIN_PASSWORD=${DIRECTUS_ADMIN_PASSWORD}
      - ADMIN_TOKEN=${DIRECTUS_ADMIN_TOKEN}
      - EMAIL_TRANSPORT=smtp
      - EMAIL_FROM=${DIRECTUS_EMAIL_FROM}
      - EMAIL_SMTP_HOST=${DIRECTUS_EMAIL_SMTP_HOST}
      - EMAIL_SMTP_PORT=${DIRECTUS_EMAIL_SMTP_PORT}
      - EMAIL_SMTP_USER=${DIRECTUS_EMAIL_SMTP_USER}
      - EMAIL_SMTP_PASSWORD=${DIRECTUS_EMAIL_SMTP_PASSWORD}
      - SCHEMA_SYNC=IMPORT
      - CORS_ENABLED=true
      - CORS_ORIGIN=*
      - WEBSOCKETS_ENABLED=true
    volumes:
      - directus-uploads:/directus/uploads

  directus-valkey:
    image: valkey/valkey:8.0.1
    networks:
      directus:
    deploy:
      replicas: 1
    volumes:
      - directus-valkey:/data

  directus-postgresql:
    image: postgres:13.16
    networks:
      directus:
    deploy:
      replicas: 1
    environment:
      - POSTGRES_USER=${DIRECTUS_DB_USER}
      - POSTGRES_DB=${DIRECTUS_DB_NAME}
      - POSTGRES_PASSWORD=${DIRECTUS_DB_PASSWORD}
    volumes:
      - directus-postgresql:/var/lib/postgresql/data

volumes:
  backend-mongo:
  backend-valkey:
  directus-uploads:
  directus-postgresql:
  directus-valkey:

networks:
  directus:
  tousinclus-backend:
  traefik_traefik:
    external: true
